"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.appWindow = void 0;
// eslint-disable-next-line no-undef
exports.appWindow = window;
var Kommunicate = {
    init: function (appId, options) {
        var environment;
        var scriptSource = 'https://widget.kommunicate.io/v2/kommunicate.app';
        if (!appId) {
            console.info('Please provide appId to initialize the widget');
            return;
        }
        if (typeof appId !== 'string') {
            console.info('AppId should be string');
            return;
        }
        var settings = {
            appId: appId,
            popupWidget: true,
            automaticChatOpenOnNavigation: true
        };
        if (isValidObject(options)) {
            // removing the environment variable
            var environment_1 = options.environment, option = __rest(options, ["environment"]);
            Object.assign(settings, option);
        }
        switch (environment) {
            case 'test':
                scriptSource = 'https://widget-test.kommunicate.io/v2/kommunicate.app';
                break;
            case 'local':
                scriptSource = 'http://localhost:3030/v2/kommunicate.app';
                break;
            default:
                scriptSource = 'https://widget.kommunicate.io/v2/kommunicate.app';
                break;
        }
        (function (d, m) {
            var kommunicateSettings = settings;
            var s = document.createElement('script');
            s.type = 'text/javascript';
            s.async = true;
            s.src = scriptSource;
            var h = document.getElementsByTagName('head')[0];
            h.appendChild(s);
            exports.appWindow.kommunicate = m;
            m._globals = kommunicateSettings;
        })(document, exports.appWindow.kommunicate || {});
    }
};
exports.default = Kommunicate;
function isValidObject(object) {
    return object && Object.keys(object).length && object.constructor === Object;
}
